allprojects {
  repositories {
    google()
    jcenter()
  }
}

ext {
  //Android libraries
  appCompat_version = '1.0.0'
  constraintLayout_version = '1.1.3'
  archComponents_version = '2.2.0-alpha03'
  room_version = "2.2.0-beta01"
  glide_version = '4.9.0'
  paging_version = "2.1.0"

  //RX
  rx_java_version = '2.2.9'
  rx_relay_version = '2.0.0'
  rx_android_version = '2.1.1'
  retrofit_rx_adapter_version = '2.6.1'

  //Third party libraries
  dagger_version = '2.24'
  javaxAnnotations_version = '1.0'
  javaxInject_version = '1'
  retrofit_version = '2.6.1'
  retrofit_gson = '2.4.0'
  okhttp_logging_interceptor_version = '4.1.0'
  timber_version = '4.7.1'

  //Unit Testing
  robolectric_version = '3.8'
  junit_version = '1.0.0'
  mockito_version = '2.1.0'
  kluent_version = '1.14'
  test_inline_version = '2.24.5'
  retrofit_mock_version = '2.5.0'

  //Acceptance Testing
  runner_version = '1.1.0'
  espresso_version = '3.1.0'

  //Development
  leakCanaryVersion = '2.0-beta-3'

  mainApplication = [
          rxJava:                     "io.reactivex.rxjava2:rxjava:$rx_java_version",
          rxRelay:                    "com.jakewharton.rxrelay2:rxrelay:$rx_relay_version",
          rxAndroid:                  "io.reactivex.rxjava2:rxandroid:$rx_android_version",
          appCompat:                  "androidx.appcompat:appcompat:$appCompat_version",
          cardView:                   "androidx.cardview:cardview:$appCompat_version",
          recyclerView:               "androidx.recyclerview:recyclerview:$appCompat_version",
          design:                     "com.google.android.material:material:$appCompat_version",
          constraintLayout:           "androidx.constraintlayout:constraintlayout:${constraintLayout_version}",
          androidAnnotations:         "androidx.annotation:annotation:$appCompat_version",
          archComponents:             "android.arch.lifecycle:extensions:$archComponents_version",
          archComponentsCompiler:     "android.arch.lifecycle:compiler:$archComponents_version",
          room:                       "androidx.room:room-runtime:$room_version",
          roomProcessor:              "androidx.room:room-compiler:$room_version",
          roomRx:                     "androidx.room:room-rxjava2:$room_version",
          glide:                      "com.github.bumptech.glide:glide:$glide_version",
          daggerCompiler:             "com.google.dagger:dagger-compiler:$dagger_version",
          dagger:                     "com.google.dagger:dagger:$dagger_version",
          daggerAndroid:              "com.google.dagger:dagger-android:$dagger_version",
          daggerAndroidSupport:       "com.google.dagger:dagger-android-support:$dagger_version",
          daggerAnnotationProcessor:  "com.google.dagger:dagger-android-processor:$dagger_version",
          javaxAnnotation:            "javax.annotation:jsr250-api:$javaxAnnotations_version",
          javaxInject:                "javax.inject:javax.inject:$javaxInject_version",
          retrofit:                   "com.squareup.retrofit2:converter-gson:$retrofit_version",
          retrofitRxJava:             "com.squareup.retrofit2:adapter-rxjava2:$retrofit_rx_adapter_version",
          okhttpLoggingInterceptor:   "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version",
          paging:                     "androidx.paging:paging-runtime:$paging_version",
          pagingRx:                   "androidx.paging:paging-rxjava2:$paging_version",
  ]

  unitTesting = [
          kotlin:             "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
          kotlinTest:         "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
          robolectric:        "org.robolectric:robolectric:$robolectric_version",
          junit:              "androidx.test.ext:junit:$junit_version",
          mockito:            "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version",
          kluent:             "org.amshove.kluent:kluent:$kluent_version",
          mockitoInline:      "org.mockito:mockito-inline:$test_inline_version",
          roomTest:           "androidx.room:room-testing:$room_version",
          mockitoRetrofit:    "com.squareup.retrofit2:retrofit-mock:$retrofit_mock_version"
  ]

  acceptanceTesting = [
          testRunner:         "androidx.test:runner:$runner_version",
          testRules:          "androidx.test:rules:$runner_version",
          espressoCore:       "androidx.test.espresso:espresso-core:$espresso_version",
          espressoIntents:    "androidx.support.test.espresso:espresso-intents:$espresso_version",
          androidTesting:     "android.arch.core:core-testing:$archComponents_version",
          androidCoreTesting: "androidx.test:core:$runner_version",
  ]

  development = [
          leakCanary:         "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
          timber:             "com.jakewharton.timber:timber:${timber_version}",
  ]
}
